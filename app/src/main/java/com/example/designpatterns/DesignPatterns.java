package com.example.designpatterns;

/**
 * 作者：Created by 武泓吉 on 2020/4/28.
 * 设计模式
 */
public class DesignPatterns {

	/**六大原则
	 * 开闭原则 ： 对扩展开发，对修改关闭
	 *里氏代换原则：子类可以扩展父类的功能，但不能改变原有父类的功能
	 * 依赖倒转原则：变量或者传参数，尽量使用抽象类，或者接口
	 * 接口隔离原则：复杂的接口，根据业务拆分成多个简单接口。
	 *迪米特法则：一个对象应该对其他对象有最少的了解。
	 *单一原则：一个类或者一个方法只负责一个职责  合理分配类和函数的职责。
	 *
	 *
	 *
	 */
}
