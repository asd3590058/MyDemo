package com.example.designpatterns;

/**
 * 作者：Created by 武泓吉 on 2020/4/28.
 * 设计模式
 */
public class DesignPatterns {

	/**六大原则
	 * 开闭原则 ： 对扩展开发，对修改关闭
	 *里氏代换原则：任何基类可以出现的地方，子类一定可以出现  是实现抽象化的具体步骤规范
	 * 依赖倒转原则：针对接口编程，依赖于抽象，不依赖具体
	 * 接口隔离原则：使用多个隔离的接口，比使用单个接口要好。是为了降低类之间的耦合度。
	 *迪米特法则：又称最少知道原则，是指一个实体应尽量少的与其他实体发生相互作用，试得系统模块相互独立
	 *单一原则：一个类或者一个方法只负责一个职责  合理分配类和函数的职责。
	 *
	 *
	 *
	 */
}
